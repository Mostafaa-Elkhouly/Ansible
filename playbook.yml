- name: play with loop
  hosts: web_servers
  gather_facts: false
  vars:
    packages:
      - nginx
      - curl
      - sudo
  vars_files: ./my_vars.yml
  tasks:
   
    - name: update ec2 machine
      tags: always
      apt:
        update_cache: true

    - name: install packages list
      apt:
        name: "{{ item }}"
        state: latest
      loop: "{{ packages }}"

    - name: install packages with different states from packages_obj
      apt:
        name: "{{ item.package_name }}"
        state: "{{ item.package_state }}"
      loop: "{{ packages_obj }}"

- name: play with conditions
  hosts: web_servers
  gather_facts: true
  tags: play_with_conditions
  tasks:

    # - name: Install nginx web server on Ubuntu
    #   apt:
    #     name: nginx
    #     state: present
    #   when: ansible_facts['distribution'] == "Ubuntu"

    # - name: Install httpd web server on CentOs
    #   apt:
    #     name: httpd
    #     state: present
    #   when: ansible_facts['distribution'] == "CentOS"

    # - name: Restart nginx web server service on Ubuntu
    #   service:
    #     name: nginx
    #     state: restarted
    #   when: ansible_facts['distribution'] == "Ubuntu"

    # - name: Restart httpd web server service on CentOS
    #   service:
    #     name: httpd
    #     state: restarted
    #   when: ansible_facts['distribution'] == "CentOS"

    #using conditional expression    
    - name: Install web server (nginx or httpd)
      apt:
        name: "{{ 'nginx' if ansible_facts['distribution'] == 'Ubuntu' else 'httpd' }}"
        state: present
      when: ansible_facts['distribution'] in ['Ubuntu', 'CentOS']

    - name: Restart web server (nginx or httpd)
      service:
        name: "{{ 'nginx' if ansible_facts['distribution'] == 'Ubuntu' else 'httpd' }}"
        state: restarted
      when: ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution'] == "CentOS"

- name: play with register
  hosts: web_servers
  tags: play_with_register
  tasks:
      
      - name: install nginx
        apt:
          name: nginx
          state: latest
        register: result

      - name: show result
        debug:
          #msg: "{{ result }}"
          var: result

      - name: Restart nginx
        service:
          name: nginx
          state: restarted
        when: result['changed'] == true or result['failed'] == false